<?xml version="1.0" encoding="utf-8"?>

<Page x:Class="Collox.Views.WritePage"
      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
      xmlns:cc="using:Collox.Common"
      xmlns:conv="using:Collox.Common.Converters"
      xmlns:ctrls="using:CommunityToolkit.WinUI.Controls"
      xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
      xmlns:dev="using:DevWinUI"
      xmlns:gaze="using:CommunityToolkit.WinUI.Input.GazeInteraction"
      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
      xmlns:uictrls="using:CommunityToolkit.WinUI.UI.Controls"
      xmlns:vm="using:Collox.ViewModels"
      xmlns:winUi="using:CommunityToolkit.WinUI"
      gaze:GazeInput.Interaction="Disabled"
      Background="{ThemeResource ApplicationPageBackgroundThemeBrush}"
      Loaded="InputBox_Loaded"
      mc:Ignorable="d">

    <Page.Resources>

        <Flyout x:Name="TaskFly" />
        <conv:TimeSpanToFriendlyConverter x:Key="TSConv" />

        <Flyout x:Name="Setfly"
                ShowMode="TransientWithDismissOnPointerMoveAway">
            <Flyout.FlyoutPresenterStyle>
                <Style TargetType="FlyoutPresenter">
                    <Setter Property="ScrollViewer.HorizontalScrollMode" Value="Disabled" />
                    <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Disabled" />
                    <Setter Property="IsTabStop" Value="True" />
                    <Setter Property="TabNavigation" Value="Cycle" />
                </Style>
            </Flyout.FlyoutPresenterStyle>
            <StackPanel Orientation="Vertical">
                <TextBlock Text="Select voice" />
                <GridView Height="480"
                          Margin="4"
                          HorizontalAlignment="Left"
                          IsItemClickEnabled="True"
                          ItemClick="GridView_ItemClick"
                          ItemsSource="{x:Bind ViewModel.InstalledVoices}"
                          SelectedItem="{x:Bind ViewModel.SelectedVoice, Mode=TwoWay}">


                    <GridView.ItemTemplate>
                        <DataTemplate xmlns:sp="using:System.Speech.Synthesis"
                                      x:DataType="sp:VoiceInfo">

                            <StackPanel Orientation="Horizontal">
                                <TextBlock Width="240"
                                           Height="40"
                                           Margin="4">
                                    <Bold>
                                        <Run Text="{x:Bind Name}" />
                                    </Bold>
                                    <LineBreak />
                                    <Run Foreground="{ThemeResource TextFillColorSecondaryBrush}"
                                         Text="{x:Bind Culture}" />
                                    <Run Foreground="{ThemeResource TextFillColorSecondaryBrush}"
                                         Text="•" />
                                    <Run Foreground="{ThemeResource TextFillColorSecondaryBrush}"
                                         Text="{x:Bind Gender}" />
                                    <Run Foreground="{ThemeResource TextFillColorSecondaryBrush}"
                                         Text="•" />
                                    <Run Foreground="{ThemeResource TextFillColorSecondaryBrush}"
                                         Text="{x:Bind Age}" />
                                </TextBlock>
                            </StackPanel>
                        </DataTemplate>
                    </GridView.ItemTemplate>

                </GridView>
            </StackPanel>
        </Flyout>
        <Flyout x:Name="Emofly">
            <StackPanel Width="400"
                        Height="400">
                <ctrls:Segmented x:Name="EmoSegment">
                    <ctrls:SegmentedItem Icon="{winUi:FontIcon Glyph=&#xED54;}" />
                    <ctrls:SegmentedItem Icon="{winUi:FontIcon Glyph=&#xED53;}" />
                    <ctrls:SegmentedItem Icon="{winUi:FontIcon Glyph=&#xED55;}" />
                    <ctrls:SegmentedItem Icon="{winUi:FontIcon Glyph=&#xED56;}" />
                    <ctrls:SegmentedItem Icon="{winUi:FontIcon Glyph=&#xED57;}" />
                    <ctrls:SegmentedItem Icon="{winUi:FontIcon Glyph=&#xED58;}" />
                    <ctrls:SegmentedItem Icon="{winUi:FontIcon Glyph=&#xEB51;}" />
                </ctrls:Segmented>


                <ScrollView Height="380"
                            ContentOrientation="Vertical">
                    <ItemsRepeater xmlns:et="using:EmojiToolkit"
                                   ItemsSource="{x:Bind et:Emoji.All}">
                        <ItemsRepeater.ItemTemplate>
                            <DataTemplate x:DataType="et:EmojiRecord">
                                <Button Padding="0"
                                        BorderThickness="0"
                                        Click="Button_Click"
                                        Tag="{x:Bind Raw}">
                                    <FontIcon Margin="0"
                                              FontFamily="Segoe UI Emoji"
                                              FontSize="32"
                                              Glyph="{x:Bind Raw}" />
                                </Button>


                            </DataTemplate>
                        </ItemsRepeater.ItemTemplate>
                        <ItemsRepeater.Layout>
                            <UniformGridLayout MinColumnSpacing="1"
                                               MinItemHeight="48"
                                               MinItemWidth="48"
                                               MinRowSpacing="1" />
                        </ItemsRepeater.Layout>
                    </ItemsRepeater>
                </ScrollView>
            </StackPanel>
        </Flyout>
        <DataTemplate x:Name="DefaultTemplate"
                      x:DataType="vm:ColloxMessage">

            <StackPanel>
                <TextBlock Text="{x:Bind RelativeTimestamp, Mode=OneWay, Converter={StaticResource TSConv}}" />
                <TextBlock Text="{x:Bind Timestamp}" />
            </StackPanel>
        </DataTemplate>
        <DataTemplate x:Name="TextParagraphTemplate"
                      x:DataType="vm:TextColloxMessage">
            <RelativePanel Margin="8,0,8,8"
                           Background="{ThemeResource SystemControlBackgroundListLowBrush}"
                           BorderBrush="{ThemeResource SystemControlForegroundAccentBrush}"
                           BorderThickness="1"
                           CornerRadius="8">

                <ctrls:HeaderedContentControl x:Name="hcc"
                                              Margin="8">

                    <ctrls:HeaderedContentControl.Header>
                        <Border Padding="2"
                                HorizontalAlignment="Left"
                                Background="{ThemeResource AccentAAFillColorDefaultBrush}"
                                CornerRadius="4">
                            <TextBlock Foreground="{ThemeResource TextOnAccentAAFillColorPrimary}">
                                <Run Text="{x:Bind RelativeTimestamp, Mode=OneWay, Converter={StaticResource TSConv}}" />
                                <Run Text="{x:Bind Timestamp}" />
                            </TextBlock>
                        </Border>
                    </ctrls:HeaderedContentControl.Header>
                    <uictrls:MarkdownTextBlock x:Name="MessageMdTBlock"
                                               Background="Transparent"
                                               FontSize="32"
                                               Text="{x:Bind Text}"
                                               TextWrapping="WrapWholeWords" />
                </ctrls:HeaderedContentControl>
                <Button x:Name="BtnRead"
                        Command="{x:Bind ReadCommand}"
                        RelativePanel.AlignRightWithPanel="True">
                    <SymbolIcon Symbol="Volume" />
                </Button>
                <TextBlock x:Name="TbComment"
                           Margin="8"
                           Foreground="{ThemeResource AccentTextFillColorSecondaryBrush}"
                           RelativePanel.Below="hcc"
                           Text="{x:Bind Comment, Mode=OneWay}"
                           TextWrapping="WrapWholeWords" />
                <dev:LoadingIndicator IsActive="{x:Bind IsLoading, Mode=OneWay}"
                                      Mode="ArcsRing"
                                      RelativePanel.AlignRightWithPanel="True"
                                      RelativePanel.Below="BtnRead" />
                <Border Height="{x:Bind AdditionalSpacing, Mode=OneWay}"
                        Background="DarkGoldenrod"
                        RelativePanel.Below="TbComment" />
            </RelativePanel>
        </DataTemplate>

        <DataTemplate x:Name="TimeTemplate"
                      x:DataType="vm:TimeColloxMessage">
            <StackPanel Padding="16"
                        Orientation="Horizontal">
                <FontIcon VerticalAlignment="Center"
                          Glyph="&#xE823;" />
                <TextBlock VerticalAlignment="Center"
                           FontSize="24"
                           FontWeight="SemiBold"
                           Text="{x:Bind Time}" />
            </StackPanel>
        </DataTemplate>

        <cc:ParagraphTemplateSelector x:Name="ParagraphsTemplate"
                                      DefaultTemplate="{StaticResource DefaultTemplate}"
                                      TextTemplate="{StaticResource TextParagraphTemplate}"
                                      TimeTemplate="{StaticResource TimeTemplate}" />
    </Page.Resources>

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="48" />
            <RowDefinition Height="*" />
            <RowDefinition Height="84" />
            <RowDefinition Height="42" />
        </Grid.RowDefinitions>

        <CommandBar Grid.Row="0"
                    Background="Transparent"
                    DefaultLabelPosition="Right"
                    IsOpen="False">
            <AppBarElementContainer>
                <StackPanel Margin="4"
                            Orientation="Horizontal"
                            Spacing="4">

                    <ProgressRing Background="{ThemeResource SystemFillColorCautionBackgroundBrush}"
                                  Foreground="{ThemeResource SystemFillColorAttentionBrush}"
                                  IsIndeterminate="False"
                                  Maximum="{x:Bind ViewModel.KeyStrokesCount, Mode=OneWay}"
                                  Value="{x:Bind ViewModel.CharacterCount, Mode=OneWay}" />

                    <StackPanel>
                        <TextBlock Text="{x:Bind ViewModel.CharacterCount, Mode=OneWay}" />
                        <TextBlock Text="{x:Bind ViewModel.KeyStrokesCount, Mode=OneWay}" />
                    </StackPanel>
                </StackPanel>
            </AppBarElementContainer>

            <AppBarButton Command="{x:Bind ViewModel.SaveNowCommand}"
                          Icon="Save"
                          Label="Save">
                <AppBarButton.KeyboardAccelerators>
                    <KeyboardAccelerator Key="S"
                                         Modifiers="Control" />
                </AppBarButton.KeyboardAccelerators>
            </AppBarButton>

            <AppBarToggleButton Icon="SaveLocal"
                                IsChecked="True"
                                IsEnabled="False"
                                Label="Auto save" />

            <AppBarButton Command="{x:Bind ViewModel.ClearCommand}"
                          Icon="Clear"
                          Label="Clear">
                <AppBarButton.KeyboardAccelerators>
                    <KeyboardAccelerator Key="K"
                                         Modifiers="Control" />
                </AppBarButton.KeyboardAccelerators>
            </AppBarButton>

            <AppBarButton Icon="Page"
                          Label="Insert template">
                <AppBarButton.Flyout>
                    <MenuFlyout x:Name="TemplatesFlyout"
                                Opening="TemplatesFlyout_Opening">
                        <MenuFlyoutItem Click="MenuFlyoutItem_Click"
                                        Icon="Edit"
                                        Tag="predefined"
                                        Text="Manage" />
                        <MenuFlyoutSeparator Tag="predefined" />

                    </MenuFlyout>
                </AppBarButton.Flyout>
            </AppBarButton>

            <AppBarButton Command="{x:Bind ViewModel.SpeakLastCommand}"
                          Icon="{winUi:FontIcon Glyph=&#xEFA9;}"
                          Label="Read last">
                <AppBarButton.KeyboardAccelerators>
                    <KeyboardAccelerator Key="R"
                                         Modifiers="Control,Shift" />
                </AppBarButton.KeyboardAccelerators>
            </AppBarButton>

            <AppBarToggleButton Icon="{winUi:FontIcon Glyph=&#xEFA9;}"
                                IsChecked="{x:Bind ViewModel.IsSpeaking, Mode=TwoWay}"
                                Label="Read aloud">
                <AppBarToggleButton.KeyboardAccelerators>
                    <KeyboardAccelerator Key="R"
                                         Modifiers="Control" />
                </AppBarToggleButton.KeyboardAccelerators>
            </AppBarToggleButton>

            <AppBarToggleButton Icon="{winUi:FontIcon Glyph=&#xEBC5;}"
                                IsChecked="{x:Bind ViewModel.IsBeeping, Mode=TwoWay}"
                                Label="Beep">
                <AppBarToggleButton.KeyboardAccelerators>
                    <KeyboardAccelerator Key="B"
                                         Modifiers="Control" />
                </AppBarToggleButton.KeyboardAccelerators>
            </AppBarToggleButton>

            <AppBarButton Flyout="{StaticResource Setfly}"
                          Icon="Setting"
                          Label="Settings">
                <AppBarButton.KeyboardAccelerators>
                    <KeyboardAccelerator Key="I"
                                         Modifiers="Control" />
                </AppBarButton.KeyboardAccelerators>
            </AppBarButton>

        </CommandBar>

        <ScrollView x:Name="Scroller"
                    Grid.Row="1"
                    HorizontalScrollBarVisibility="Hidden"
                    HorizontalScrollMode="Disabled"
                    VerticalScrollBarVisibility="Auto">
            <ItemsRepeater x:Name="irChat"
                           Background="{ThemeResource SystemControlBackgroundListMediumBrush}"
                           CacheMode="BitmapCache"
                           ItemTemplate="{StaticResource ParagraphsTemplate}"
                           ItemsSource="{x:Bind ViewModel.Paragraphs}" />
        </ScrollView>

        <InfoBar Title="Current Context"
                 Grid.Row="1"
                 IsOpen="True"
                 Message="{x:Bind ViewModel.ConversationContext.Context, Mode=OneWay}"
                 Severity="Informational">
            <InfoBar.Resources>
                <ResourceDictionary Source="ms-appx:///DevWinUI.Controls/Themes/InfoBarInformationalColor.xaml" />
            </InfoBar.Resources>
        </InfoBar>

        <uictrls:MarkdownTextBlock Grid.Row="2"
                                   FontSize="22"
                                   Text="{x:Bind TbInput.Text, Mode=OneWay}"
                                   TextWrapping="WrapWholeWords" />
        <Grid Grid.Row="3">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="48" />
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="96" />
            </Grid.ColumnDefinitions>
            <Button Grid.Column="0"
                    VerticalAlignment="Center"
                    Flyout="{StaticResource Emofly}">
                <SymbolIcon Symbol="Emoji2" />
            </Button>
            <TextBox x:Name="TbInput"
                     Grid.Column="1"
                     AcceptsReturn="True"
                     FontSize="22"
                     IsTextPredictionEnabled="True"
                     Loaded="InputBox_Loaded"
                     PlaceholderText="Your message"
                     PreviewKeyDown="InputBox_PreviewKeyDown"
                     Text="{x:Bind Path=ViewModel.LastParagraph, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
            <SplitButton x:Name="BtnSubmit"
                         Grid.Column="2"
                         HorizontalAlignment="Center"
                         VerticalAlignment="Center"
                         Command="{x:Bind ViewModel.SubmitCommand}">
                <SplitButton.KeyboardAccelerators>
                    <KeyboardAccelerator Key="M"
                                         Invoked="ChangeModeKeyboardAccelerator_Invoked"
                                         Modifiers="Control" />
                </SplitButton.KeyboardAccelerators>
                <SymbolIcon Symbol="{x:Bind ViewModel.SubmitModeIcon, Mode=OneWay}" />

                <SplitButton.Flyout>
                    <MenuFlyout>
                        <MenuFlyoutItem Command="{x:Bind ViewModel.ChangeModeToWriteCommand}"
                                        Icon="Send"
                                        Text="Write text" />
                        <MenuFlyoutItem Command="{x:Bind ViewModel.ChangeModeToCmdCommand}"
                                        Icon="Play"
                                        Text="Enter commands" />

                    </MenuFlyout>
                </SplitButton.Flyout>
            </SplitButton>


        </Grid>
    </Grid>
</Page>
