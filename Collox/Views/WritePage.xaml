<?xml version="1.0" encoding="utf-8" ?>
<Page x:Class="Collox.Views.WritePage"
      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
      xmlns:conv="using:Collox.Common.Converters"
      xmlns:ctrls="using:CommunityToolkit.WinUI.Controls"
      xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
      xmlns:dev="using:DevWinUI"
      xmlns:gaze="using:CommunityToolkit.WinUI.Input.GazeInteraction"
      xmlns:local="using:Collox.Views"
      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
      xmlns:system="using:System"
      xmlns:uictrls="using:CommunityToolkit.WinUI.UI.Controls"
      gaze:GazeInput.Interaction="Disabled"
      Background="{ThemeResource ApplicationPageBackgroundThemeBrush}"
      Loaded="tbInput_Loaded"
      mc:Ignorable="d">

    <Page.Resources>

        <Flyout x:Name="taskFly">

        </Flyout>
        <conv:TimeSpanToFriendlyConverter x:Key="tsconv" />

        <Flyout x:Name="setfly"
                ShowMode="TransientWithDismissOnPointerMoveAway">
            <Flyout.FlyoutPresenterStyle>
                <Style TargetType="FlyoutPresenter">
                    <Setter Property="ScrollViewer.HorizontalScrollMode" Value="Disabled" />
                    <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Disabled" />
                    <Setter Property="IsTabStop" Value="True" />
                    <Setter Property="TabNavigation" Value="Cycle" />
                </Style>
            </Flyout.FlyoutPresenterStyle>
            <StackPanel Orientation="Vertical">
                <TextBlock Text="Select voice" />
                <GridView Height="480"
                          Margin="4"
                          HorizontalAlignment="Left"
                          IsItemClickEnabled="True"
                          ItemClick="GridView_ItemClick"
                          ItemsSource="{x:Bind ViewModel.InstalledVoices}"
                          SelectedItem="{x:Bind ViewModel.SelectedVoice, Mode=TwoWay}">


                    <GridView.ItemTemplate>
                        <DataTemplate xmlns:sp="using:System.Speech.Synthesis"
                                      x:DataType="sp:VoiceInfo">

                            <StackPanel Orientation="Horizontal">
                                <TextBlock Width="240"
                                           Height="40"
                                           Margin="4">
                                    <Bold>
                                        <Run Text="{x:Bind Name}" />
                                    </Bold><LineBreak />
                                    <Run Foreground="{ThemeResource TextFillColorSecondaryBrush}"
                                         Text="{x:Bind Culture}" />
                                    <Run Foreground="{ThemeResource TextFillColorSecondaryBrush}"
                                         Text="•" />
                                    <Run Foreground="{ThemeResource TextFillColorSecondaryBrush}"
                                         Text="{x:Bind Gender}" />
                                    <Run Foreground="{ThemeResource TextFillColorSecondaryBrush}"
                                         Text="•" />
                                    <Run Foreground="{ThemeResource TextFillColorSecondaryBrush}"
                                         Text="{x:Bind Age}" />
                                </TextBlock>
                            </StackPanel>
                        </DataTemplate>
                    </GridView.ItemTemplate>

                </GridView>
            </StackPanel>
        </Flyout>
        <Flyout x:Name="emofly">
            <StackPanel Width="400"
                        Height="400">
                <ctrls:Segmented x:Name="segm">
                    <ctrls:SegmentedItem Content="Faces" />
                    <ctrls:SegmentedItem Content="People" />
                    <ctrls:SegmentedItem Content="Nature" />
                </ctrls:Segmented>


                <ScrollView x:Name="svEmo"
                            Height="380"
                            ContentOrientation="Vertical">
                    <ItemsRepeater xmlns:et="using:EmojiToolkit"
                                   x:Name="irEmo"
                                   ItemsSource="{x:Bind et:Emoji.All, Mode=OneTime}">
                        <ItemsRepeater.ItemTemplate>
                            <DataTemplate x:DataType="et:EmojiRecord">
                                <Button Padding="0"
                                        BorderThickness="0"
                                        Click="Button_Click"
                                        Tag="{x:Bind Raw}">
                                    <FontIcon Margin="0"
                                              FontFamily="Segoe UI Emoji"
                                              FontSize="32"
                                              Glyph="{x:Bind Raw, Mode=OneTime}" />
                                </Button>


                            </DataTemplate>
                        </ItemsRepeater.ItemTemplate>
                        <ItemsRepeater.Layout>
                            <UniformGridLayout MinColumnSpacing="1"
                                               MinItemHeight="48"
                                               MinItemWidth="48"
                                               MinRowSpacing="1" />
                        </ItemsRepeater.Layout>
                    </ItemsRepeater>
                </ScrollView>
            </StackPanel>
        </Flyout>
    </Page.Resources>

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="48" />
            <RowDefinition Height="*" />
            <RowDefinition Height="84" />
            <RowDefinition Height="42" />
        </Grid.RowDefinitions>

        <CommandBar x:Name="cbMain"
                    Grid.Row="0"
                    Background="Transparent"
                    DefaultLabelPosition="Right"
                    IsOpen="False">
            <AppBarElementContainer>
                <StackPanel Margin="4"
                            Orientation="Horizontal"
                            Spacing="4">

                    <ProgressRing Background="{ThemeResource SystemFillColorCautionBackgroundBrush}"
                                  Foreground="{ThemeResource SystemFillColorAttentionBrush}"
                                  IsIndeterminate="False"
                                  Maximum="{x:Bind ViewModel.KeyStrokesCount, Mode=OneWay}"
                                  Value="{x:Bind ViewModel.CharacterCount, Mode=OneWay}" />

                    <StackPanel>
                        <TextBlock Text="{x:Bind ViewModel.CharacterCount, Mode=OneWay}" />
                        <TextBlock Text="{x:Bind ViewModel.KeyStrokesCount, Mode=OneWay}" />
                    </StackPanel>
                </StackPanel>
            </AppBarElementContainer>
            <AppBarButton Command="{x:Bind ViewModel.SaveNowCommand}"
                          Icon="Save"
                          Label="Save">
                <AppBarButton.KeyboardAccelerators>
                    <KeyboardAccelerator Key="S"
                                         Modifiers="Control" />
                </AppBarButton.KeyboardAccelerators>
            </AppBarButton>
            <AppBarToggleButton Icon="SaveLocal"
                                IsChecked="True"
                                IsEnabled="False"
                                Label="Auto save" />
            <AppBarButton Command="{x:Bind ViewModel.ClearCommand}"
                          Icon="Clear"
                          Label="Clear">
                <AppBarButton.KeyboardAccelerators>
                    <KeyboardAccelerator Key="K"
                                         Modifiers="Control" />
                </AppBarButton.KeyboardAccelerators>
            </AppBarButton>
            <AppBarButton Icon="Page"
                          Label="Insert template">
                <AppBarButton.Flyout>
                    <MenuFlyout x:Name="templatesFlyout"
                                Opening="templatesFlyout_Opening">
                        <MenuFlyoutItem Click="MenuFlyoutItem_Click"
                                        Icon="Edit"
                                        Tag="predefined"
                                        Text="Manage" />
                        <MenuFlyoutSeparator Tag="predefined" />

                    </MenuFlyout>
                </AppBarButton.Flyout>
            </AppBarButton>


            <AppBarButton Command="{x:Bind ViewModel.SpeakLastCommand}"
                          Label="Read last">
                <FontIcon Glyph="&#xEFA9;" />
                <AppBarButton.KeyboardAccelerators>
                    <KeyboardAccelerator Key="R"
                                         Modifiers="Control,Shift" />
                </AppBarButton.KeyboardAccelerators>
            </AppBarButton>

            <AppBarToggleButton IsChecked="{x:Bind ViewModel.IsSpeaking, Mode=TwoWay}"
                                Label="Read aloud">
                <FontIcon Glyph="&#xEFA9;" />
                <AppBarToggleButton.KeyboardAccelerators>
                    <KeyboardAccelerator Key="R"
                                         Modifiers="Control" />
                </AppBarToggleButton.KeyboardAccelerators>
            </AppBarToggleButton>
            <AppBarToggleButton IsChecked="{x:Bind ViewModel.IsBeeping, Mode=TwoWay}"
                                Label="Beep">
                <FontIcon Glyph="&#xEA8F;" />
                <AppBarToggleButton.KeyboardAccelerators>
                    <KeyboardAccelerator Key="B"
                                         Modifiers="Control" />
                </AppBarToggleButton.KeyboardAccelerators>
            </AppBarToggleButton>

            <AppBarButton Flyout="{StaticResource setfly}"
                          Icon="Setting"
                          Label="Settings">
                <AppBarButton.KeyboardAccelerators>
                    <KeyboardAccelerator Key="I"
                                         Modifiers="Control" />
                </AppBarButton.KeyboardAccelerators>
            </AppBarButton>

        </CommandBar>



        <TeachingTip x:Name="ClockTip"
                     Title="Time"
                     IsOpen="True"
                     Subtitle="What time is it?"
                     Target="{x:Bind tbInput}">
            <TeachingTip.HeroContent>
                <dev:Clock HorizontalAlignment="Center"
                           VerticalAlignment="Center" />
            </TeachingTip.HeroContent>
            <TeachingTip.Content>
                <TextBlock Margin="16"
                           FontFamily="Cascadia Code"
                           Text="{x:Bind system:DateTime.Now, Mode=OneWay}" />
            </TeachingTip.Content>
        </TeachingTip>

        <ScrollView x:Name="scroller"
                    Grid.Row="1"
                    HorizontalScrollBarVisibility="Hidden"
                    HorizontalScrollMode="Disabled"
                    VerticalScrollBarVisibility="Auto">
            <ItemsRepeater x:Name="irChat"
                           Background="{ThemeResource SystemControlBackgroundListMediumBrush}"
                           CacheMode="BitmapCache"
                           ItemsSource="{x:Bind ViewModel.Paragraphs}">
                <ItemsRepeater.ItemTemplate>
                    <DataTemplate xmlns:vm="using:Collox.ViewModels"
                                  x:DataType="vm:Paragraph">
                        <RelativePanel Margin="8,0,8,8"
                                       Background="{ThemeResource SystemControlBackgroundListLowBrush}"
                                       BorderBrush="{ThemeResource SystemControlForegroundAccentBrush}"
                                       BorderThickness="1"
                                       CornerRadius="8">

                            <ctrls:HeaderedContentControl x:Name="hcc"
                                                          Margin="8">

                                <ctrls:HeaderedContentControl.Header>
                                    <Border Padding="2"
                                            HorizontalAlignment="Left"
                                            Background="{ThemeResource AccentAAFillColorDefaultBrush}"
                                            CornerRadius="4">
                                        <TextBlock Foreground="{ThemeResource TextOnAccentAAFillColorPrimary}">
                                            <Run Text="{x:Bind RelativeTimestamp, Mode=OneWay, Converter={StaticResource tsconv}}" />
                                            <Run Text="{x:Bind Timestamp}" />
                                        </TextBlock>
                                    </Border>
                                </ctrls:HeaderedContentControl.Header>
                                <uictrls:MarkdownTextBlock x:Name="mdtbEntry"
                                                           Background="Transparent"
                                                           FontSize="32"
                                                           Text="{x:Bind Text}"
                                                           TextWrapping="WrapWholeWords" />
                            </ctrls:HeaderedContentControl>
                            <Button Command="{x:Bind ReadCommand}"
                                    RelativePanel.AlignRightWithPanel="True">
                                <SymbolIcon Symbol="Volume" />
                            </Button>
                            <Border Height="{x:Bind AdditionalSpacing, Mode=OneWay}"
                                    Background="DarkGoldenrod"
                                    RelativePanel.Below="hcc" />
                        </RelativePanel>
                    </DataTemplate>
                </ItemsRepeater.ItemTemplate>
            </ItemsRepeater>
        </ScrollView>

        <InfoBar x:Name="infoBar"
                 Title="Infoooze"
                 Grid.Row="1"
                 IsOpen="False"
                 Message="🔴🟠🟡🟢🔵🟣🟤⚫⚪"
                 Severity="Informational" />

        <uictrls:MarkdownTextBlock Grid.Row="2"
                                   FontSize="22"
                                   Text="{x:Bind tbInput.Text, Mode=OneWay}"
                                   TextWrapping="WrapWholeWords" />
        <Grid Grid.Row="3">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="48" />
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="96" />
            </Grid.ColumnDefinitions>
            <Button Grid.Column="0"
                    VerticalAlignment="Center"
                    Flyout="{StaticResource emofly}">
                <SymbolIcon Symbol="Emoji2" />
            </Button>
            <TextBox x:Name="tbInput"
                     Grid.Column="1"
                     AcceptsReturn="True"
                     FontSize="22"
                     IsTextPredictionEnabled="True"
                     Loaded="tbInput_Loaded"
                     PlaceholderText="Your message"
                     PreviewKeyDown="tbInput_PreviewKeyDown"
                     Text="{x:Bind Path=ViewModel.LastParagraph, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
            </TextBox>
            <SplitButton x:Name="btnSubmit"
                         Grid.Column="2"
                         HorizontalAlignment="Center"
                         VerticalAlignment="Center"
                         Command="{x:Bind ViewModel.SubmitCommand}">
                <SymbolIcon Symbol="{x:Bind ViewModel.SubmitModeIcon, Mode=OneWay}" />
                <SplitButton.KeyboardAccelerators>
                    <KeyboardAccelerator Key="Enter"
                                         Modifiers="Control" />
                </SplitButton.KeyboardAccelerators>
                <SplitButton.Flyout>
                    <MenuFlyout>
                        <MenuFlyoutItem Command="{x:Bind ViewModel.ChangeModeToWriteCommand}"
                                        Icon="Send"
                                        Text="Write text">
                        </MenuFlyoutItem>
                        <MenuFlyoutItem Command="{x:Bind ViewModel.ChangeModeToCmdCommand}"
                                        Icon="Play"
                                        Text="Enter commands">
                        </MenuFlyoutItem>

                    </MenuFlyout>
                </SplitButton.Flyout>
            </SplitButton>


        </Grid>
    </Grid>
</Page>
